swagger: '2.0'
info:
  description: >-
    Este documento pretende ser una guía de entendimiento común, para todos los
    usuarios involucrados en el consumo, desarrollo, o implementación de alguno
    de los servicios Backend que RIS ofrece.
  version: 7.0.0
  title: RIS PLATFORM API 
schemes:
  - https
  - http
tags:
  - name: BASES DE DATOS
    description: >-
      En esta sección encontrará todo lo relacionado para obtener las bases de
      datos donde se configuraran los clientes.
      
  - name: TRANSFORMACIONES
    description: >-
      En esta sección encontrará todo lo relacionado para obtener las diferentes
      transformaciones que son aplicables a un archivo almacenado en RIS.
      
  - name: TIEMPOS DE CONSULTA
    description: >-
      En esta sección encontrará todo lo relacionado con los tiempos de consulta que pueden ser aplicables a un archivo en RIS.
      
  - name: PROVEDORES
    description: >-
      En esta sección encontrará todo lo relacionado con los proveedores que pueden ser asociados a los diferentes servicios dentro de RIS.
      
  - name: CLIENTES
    description: >-
      En esta sección encontrará todo lo relacionado con la gestión de un
      cliente.
      
  - name: PRODUCTOS
    description: >-
      En esta sección encontrará todo lo relacionado con la gestión de un
      producto.
  
  - name: ÍNDICES DE ALMACENAMIENTO
    description: >-
      En esta sección encontrará todo lo relacionado con la gestión de los indices de almacenamiento asociados a
      producto dentro de RIS.
  
  - name: PERIDOS DE CONSULTA 
    description: >-
      En esta sección encontrará todo lo relacionado con la creación de los periodos de consulta de un producto en RIS, esto hace referencia a los tiempos en los que podrá, ser consultado un producto en el front del cliente.

  - name: SERVICIOS RIS
    description: >-
      En esta sección encontrará todo lo relacionado con la gestión de los servicios de RIS.
      
  - name: CONFIGURACIÓN PARÁMETROS
    description: >-
      En esta sección encontrará todo lo relacionado con los estándares de configuración asociados a los parámetros de envío para SMS y para MAIL.
      
  - name: TEMPLATE SMS
    description: >-
      En esta sección encontrará todo lo relacionado creación y gestión de
      templates para el envio de cualquier tipo de SMS.
      
  - name: TEMPLATE MAIL
    description: >-
      En esta sección encontrará todo lo relacionado creación y gestión de
      plantillas para el envio de cualquier tipo de MAIL.

  - name: LENGUAJES
    description: >-
      En esta sección encontrará todo lo relacionado creación y gestión de
      lenguajes para el envío de SMS VOICE (LLAMADAS) dentro de RIS.
      
paths:
  
  /listLanguages:
    get:
      tags:
        - LENGUAJES
      summary: >-
        Listar los lenguajes que estan habilitados para el envíode SMS VOICEen RIS. Se implemeta bajo el método getLanguages().
      description: >-
        End point que permite listar los lenguajes con los cuales puede ser enviado un SMS VOICE. Se implemeta bajo el método getLanguages().
      operationId: getLanguages
      produces:
        - application/json
      responses:
        '200':
          description: >-
            200 OK. El request es correcto. Esta es la respuesta estándar para
            respuestas correctas.
          schema:
            $ref: '#/definitions/ResponseOKGetLanguages'
          headers: {}
        '400':
          description: >-
            Bad Request. El servidor no puede o no va a procesar el request por
            un error de sintaxis del cliente debido a que no cumple con la
            estructura esperada.
          schema:
            $ref: '#/definitions/ResponseBabRequest'
          headers: {}
        '401':
          description: >-
            401 Unauthorized La autentificación ha fallado o todavía no se a
            facilitado.
          schema:
            $ref: '#/definitions/ResponseUnauthorized'
          headers: {}
        '501':
          description: >-
            501 Not Implemented. El servidor no reconoce el método del request o
            carece de la capacidad para completarlo.
          schema:
            $ref: '#/definitions/ResponseNotImplemented'
          headers: {}
          
  /listParameters:
    get:
      tags:
        - CONFIGURACIÓN PARÁMETROS
      summary: >-
        Listar la configuración de los parámetros que son aplicables dentro del envío de SMS ó de MAIL en RIS. Se implemeta bajo el método getParameters().
      description: >-
        End point que permite listar la configuración que tienen asociados los parámetros para el envío de SMS y de MAIL en RIS.Extrae la información de la
        TBL_MASTER_CONFIGURATION_PARAMETERS_ELECTRONIC_SEND de la base de datos dbris, es necesario cruzar con la tabla TBL_MASTER_SUBCATEGORY, para obtener la subcategoría de envío que será utilizada por el Front-End . Se implemeta bajo el método getParameters().
      operationId: getParameters
      produces:
        - application/json
      responses:
        '200':
          description: >-
            200 OK. El request es correcto. Esta es la respuesta estándar para
            respuestas correctas.
          schema:
            $ref: '#/definitions/ReponseOkGetParameters'
          headers: {}
        '400':
          description: >-
            Bad Request. El servidor no puede o no va a procesar el request por
            un error de sintaxis del cliente debido a que no cumple con la
            estructura esperada.
          schema:
            $ref: '#/definitions/ResponseBabRequest'
          headers: {}
        '401':
          description: >-
            401 Unauthorized La autentificación ha fallado o todavía no se a
            facilitado.
          schema:
            $ref: '#/definitions/ResponseUnauthorized'
          headers: {}
        '501':
          description: >-
            501 Not Implemented. El servidor no reconoce el método del request o
            carece de la capacidad para completarlo.
          schema:
            $ref: '#/definitions/ResponseNotImplemented'
          headers: {}
          
  /listDatabases:
    get:
      tags:
        - BASES DE DATOS
      summary: >-
        Listar todas las bases de datos en las cuales se puede almacenar la
        información de un cliente. Se implemeta bajo el método getDatabases().
      description: >-
        End point que permite listar todas las bases de datos donde puede ser
        almacenada la información de los clientes extrae la información de la
        TBL_DATA_BASES de la base de datos dbalmacenamiento. Se implemeta bajo el método getDatabases().
      operationId: getDatabases
      produces:
        - application/json
      responses:
        '200':
          description: >-
            200 OK. El request es correcto. Esta es la respuesta estándar para
            respuestas correctas.
          schema:
            $ref: '#/definitions/ResponseOKGetDataBases'
          headers: {}
        '400':
          description: >-
            Bad Request. El servidor no puede o no va a procesar el request por
            un error de sintaxis del cliente debido a que no cumple con la
            estructura esperada.
          schema:
            $ref: '#/definitions/ResponseBabRequest'
          headers: {}
        '401':
          description: >-
            401 Unauthorized La autentificación ha fallado o todavía no se a
            facilitado.
          schema:
            $ref: '#/definitions/ResponseUnauthorized'
          headers: {}
        '501':
          description: >-
            501 Not Implemented. El servidor no reconoce el método del request o
            carece de la capacidad para completarlo.
          schema:
            $ref: '#/definitions/ResponseNotImplemented'
          headers: {}
          
  /listTransformations:
    get:
      tags:
        - TRANSFORMACIONES
      summary: Listar todas las transformaciones. Se implementa bajo el método getTransformations().
      description: >-
        End point que permite listar todas las transformaciones a las que puede
        ser sometido un archivo almacenado en RIS, extrae la información de la
        TBL_TRANSFORMACIONES de la base de datos dbalmacenamiento.Se implementa bajo el método getTransformations().
      operationId: getTransformations
      produces:
        - application/json
      responses:
        '200':
          description: >-
            200 OK. El request es correcto. Esta es la respuesta estándar para
            respuestas correctas.
          schema:
            $ref: '#/definitions/ResponseOKGetTransformations'
          headers: {}
        '400':
          description: >-
            Bad Request. El servidor no puede o no va a procesar el request por
            un error de sintaxis del cliente debido a que no cumple con la
            estructura esperada.
          schema:
            $ref: '#/definitions/ResponseBabRequest'
          headers: {}
        '401':
          description: >-
            401 Unauthorized La autentificación ha fallado o todavía no se a
            facilitado.
          schema:
            $ref: '#/definitions/ResponseUnauthorized'
          headers: {}
        '501':
          description: >-
            501 Not Implemented. El servidor no reconoce el método del request o
            carece de la capacidad para completarlo.
          schema:
            $ref: '#/definitions/ResponseNotImplemented'
          headers: {}
          
  /listPeriodsTime:
    get:
      tags:
        - TIEMPOS DE CONSULTA
      summary: >-
        Listar todos los tiempos de almacenamiento que son aplicables a un producto dentro de RIS. Se implemeta bajo el método getPeriodsTime().
      description: >-
        End point que permite listar todos los tiempos de almacenamiento que son aplicables a un producto dentro de RIS.Extrae la información de la
        TBL_TIEMPO_CONSULTA de la base de datos dbalmacenamiento. Se implemeta bajo el método getPeriodsTime().
      operationId: getPeriodsTime
      produces:
        - application/json
      responses:
        '200':
          description: >-
            200 OK. El request es correcto. Esta es la respuesta estándar para
            respuestas correctas.
          schema:
            $ref: '#/definitions/ResponseOKGetPeriodsTime'
          headers: {}
        '400':
          description: >-
            Bad Request. El servidor no puede o no va a procesar el request por
            un error de sintaxis del cliente debido a que no cumple con la
            estructura esperada.
          schema:
            $ref: '#/definitions/ResponseBabRequest'
          headers: {}
        '401':
          description: >-
            401 Unauthorized La autentificación ha fallado o todavía no se a
            facilitado.
          schema:
            $ref: '#/definitions/ResponseUnauthorized'
          headers: {}
        '501':
          description: >-
            501 Not Implemented. El servidor no reconoce el método del request o
            carece de la capacidad para completarlo.
          schema:
            $ref: '#/definitions/ResponseNotImplemented'
          headers: {}
          
  
  /listClients:
    get:
      tags:
        - CLIENTES
      summary: Listar todos clientes. Se implementa bajo el método getClients().
      description: >-
        End point que permite listar los distintos clientes registrados en la tabla
        TBL_CLIENTE_PRODUCTO_AZURE de la base de datos dbalmacenamiento. Se implementa bajo el método getClients() (DEBE REALIZARSE UN DISTINCT EN EL QUERY).
      operationId: getClients
      produces:
        - application/json
      responses:
        '200':
          description: >-
            200 OK. El request es correcto. Esta es la respuesta estándar para
            respuestas correctas.
          schema:
            $ref: '#/definitions/ResponseOKGetClients'
          headers: {}
        '400':
          description: >-
            Bad Request. El servidor no puede o no va a procesar el request por
            un error de sintaxis del cliente debido a que no cumple con la
            estructura esperada.
          schema:
            $ref: '#/definitions/ResponseBabRequest'
          headers: {}
        '401':
          description: >-
            401 Unauthorized La autentificación ha fallado o todavía no se a
            facilitado.
          schema:
            $ref: '#/definitions/ResponseUnauthorized'
          headers: {}
        '501':
          description: >-
            501 Not Implemented. El servidor no reconoce el método del request o
            carece de la capacidad para completarlo.
          schema:
            $ref: '#/definitions/ResponseNotImplemented'
          headers: {}
          
  /listClient/{client_code}:
    get:
      tags:
      - CLIENTES
      summary: Obtener un cliente por su código de cliente (client_code). Se implementa bajo el método getClientByID().
      description: "End point que permite obtener la información de un cliente asociado al parametro client_code.Se implementa bajo el método getClientByID()."
      operationId: "getClientByID"
      produces:
      - "application/json"
      parameters:
      - name: "client_code"
        in: "path"
        description: "Código que identifica al cliente de manera única en RIS, es otra llave diferente al NIT dado que es asignada por el sistema."
        required: true
        type: "integer"
      responses:
        '200':
          description: >-
            200 OK. El request es correcto. Esta es la respuesta estándar para
            respuestas correctas.
          schema:
            $ref: '#/definitions/Clients'
          headers: {}
        '400':
          description: >-
            Bad Request. El servidor no puede o no va a procesar el request por
            un error de sintaxis del cliente debido a que no cumple con la
            estructura esperada.
          schema:
            $ref: '#/definitions/ResponseBabRequest'
          headers: {}
        '401':
          description: >-
            401 Unauthorized La autentificación ha fallado o todavía no se a
            facilitado.
          schema:
            $ref: '#/definitions/ResponseUnauthorized'
          headers: {}
        '501':
          description: >-
            501 Not Implemented. El servidor no reconoce el método del request o
            carece de la capacidad para completarlo.
          schema:
            $ref: '#/definitions/ResponseNotImplemented'
          headers: {}
  
  /updateClient/{client_code}:
    put:
      tags:
        - CLIENTES
      summary: Actualizar un cliente previamente registrado. Se implementa bajo el método updateClient().
      description: >-
        End point que permite actualizar un  cliente en la tabla
        TBL_CLIENTE_PRODUCTO_AZURE de la base de datos dbalmacenamiento.Se implementa bajo el método updateClient().
      operationId: updateClient
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: client_code
          description: "Código que identifica al cliente de manera única en RIS, es otra llave diferente al NIT dado que es asignada por el sistema."
          required: true
          type: "integer"
        - in: body
          name: body
          description: >-
            Objeto que contiene la estructura de un Cliente, y espera alguno de los siguientes atributos:
             nit (Número de Identificación Tributaria del cliente), business_name (Razón social o nombre comercial del cliente),y un arreglo de las cuentas de almacenamiento que posee el cliente. Para cada cuenta de almacenamiento debe registar: el nombre de la cuenta de almacenamiento (azure_account_name), la llave de la cuenta de almacenamiento (azure_account_key) y el sastoken (azure_account_sastoken) .Se implementa bajo el método updateClient().
          required: true
          schema:
            $ref: '#/definitions/Client'
      responses:
        '200':
          description: >-
           200 OK. El request es correcto. Esta es la respuesta estándar para respuestas correctas.
          schema:
            $ref: '#/definitions/ResponseOk'
          headers: {}
        '400':
          description: >-
            Bad Request. El servidor no puede o no va a procesar el request por
            un error de sintaxis del cliente debido a que no cumple con la
            estructura esperada.
          schema:
            $ref: '#/definitions/ResponseBabRequest'
          headers: {}
        '401':
          description: >-
            401 Unauthorized La autentificación ha fallado o todavía no se a
            facilitado.
          schema:
            $ref: '#/definitions/ResponseUnauthorized'
          headers: {}
        '501':
          description: >-
            501 Not Implemented. El servidor no reconoce el método del request o
            carece de la capacidad para completarlo.
          schema:
            $ref: '#/definitions/ResponseNotImplemented'
          headers: {}
          
  /deleteClient/{client_code}:
    delete:
      tags:
        - CLIENTES
      summary: Desactivar un cliente previamente registrado. Se implementa bajo el método inactivateClient().
      description: >-
        End point que permite desactivar un cliente de la tabla
        TBL_CLIENTE_PRODUCTO_AZURE de la base de datos dbalmacenamiento. Simplemente cambia el valor de la columna activo de 1 a 0.Se implementa bajo el método inactivateClient().
      operationId: inactivateClient
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: client_code
          description: "Código que identifica al cliente de manera única en RIS, es otra llave diferente al NIT dado que es asignada por el sistema."
          required: true
          type: "integer"
      responses:
        '200':
          description: >-
            Operación realizada exitosamente
          schema:
            $ref: '#/definitions/ResponseOk'
          headers: {}
        '400':
          description: >-
            Bad Request. El servidor no puede o no va a procesar el request por
            un error de sintaxis del cliente debido a que no cumple con la
            estructura esperada.
          schema:
            $ref: '#/definitions/ResponseBabRequest'
          headers: {}
        '401':
          description: >-
            401 Unauthorized La autentificación ha fallado o todavía no se a
            facilitado.
          schema:
            $ref: '#/definitions/ResponseUnauthorized'
          headers: {}
        '501':
          description: >-
            501 Not Implemented. El servidor no reconoce el método del request o
            carece de la capacidad para completarlo.
          schema:
            $ref: '#/definitions/ResponseNotImplemented'
          headers: {}
          
  /createProductClient:
    post:
      tags:
        - PRODUCTOS
      summary: Crear un nuevo producto.Se implementa bajo el método createProductClient(). Este end point se usa cuando se crea un cliente producto por primera vez.
      description: >-
        End point que permite crear un nuevo producto en la tabla
        TBL_CLIENTE_PRODUCTO_AZURE de la base de datos dbalmacenamiento.Se implementa bajo el método createProductClient().Este end point se usa cuando se crea un cliente producto por primera vez.
      operationId: createProductClient
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: >-
            Objeto que contiene la estructura de un producto, todos los atributos
            del objeto son de caracter OBLIGATORIO y están representados por:   product_name (Nombre del producto), product_description
            (descripción del producto), data_base_name (Nombre de la Base de datos donde será almacenado el producto) y la configuración del contenedor. Para cada contenedor se debe registar: Nombre de la cuenta de almacenamiento (azure_account_name),Nombre del contenedor (azure_container_name) y el Tiempo de Vigencia en meses (period_time_months) .Se implementa bajo el método createProductClient(), adicionalmente este método valida si el registro ya existe y en caso de ser así devuelve un error 409.
          required: true
          schema:
            $ref: '#/definitions/Product'
      responses:
        '201':
          description: >-
            Created. El request se ha completado y se ha creado un nuevo
            recurso. Adicionalmente en la BD se registra la marca de tiempo en
            que se realizo la creación del cliente
          schema:
            $ref: '#/definitions/ReponseCreatedObjectProduct'
          headers: {}
        '400':
          description: >-
            Bad Request. El servidor no puede o no va a procesar el request por
            un error de sintaxis del cliente debido a que no cumple con la
            estructura esperada.
          schema:
            $ref: '#/definitions/ResponseBabRequest'
          headers: {}
          
        '409':
          description: >-
            Conflict. La solicitud no pudo ser procesada debido a un conflicto, el registro ya existe en la BD.
          schema:
            $ref: '#/definitions/ResponseConflict'
          headers: {}
          
        '401':
          description: >-
            401 Unauthorized La autentificación ha fallado o todavía no se a
            facilitado.
          schema:
            $ref: '#/definitions/ResponseUnauthorized'
          headers: {}
          
        '501':
          description: >-
            501 Not Implemented. El servidor no reconoce el método del request o
            carece de la capacidad para completarlo.
          schema:
            $ref: '#/definitions/ResponseNotImplemented'
          headers: {}
          
  /createProduct:
    post:
      tags:
        - PRODUCTOS
      summary: Crear un nuevo producto.Se implementa bajo el método createProduct(), este end point se utiliza para asociar productos a un cliente previamente registrado.
      description: >-
        End point que permite crear un nuevo producto en la tabla
        TBL_CLIENTE_PRODUCTO_AZURE de la base de datos dbalmacenamiento.Se implementa bajo el método createProduct(), hace un INSERT a la BD.Este end point se utiliza para asociar productos a un cliente previamente registrado.
      operationId: createProduct
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: >-
            Objeto que contiene la estructura de un producto, todos los atributos
            del objeto son de caracter OBLIGATORIO y están representados por: client_code (Código del cliente asociado a ese producto),
            product_name (Nombre del producto), product_description
            (descripción del producto), data_base_name (Nombre de la Base de datos donde será almacenado el producto), Tiempo de Vigencia en meses (period_time_months) y la configuración del contenedor. Para cada contenedor se debe registar: Nombre de la cuenta de almacenamiento (azure_account_name),Nombre del contenedor (azure_container_name) .Se implementa bajo el método createProductClient(), adicionalmente este método valida si el registro ya existe y en caso de ser así devuelve un error 409.
          required: true
          schema:
            $ref: '#/definitions/ClientsProducts'
      responses:
        '201':
          description: >-
            Created. El request se ha completado y se ha creado un nuevo
            recurso. Adicionalmente en la BD se registra la marca de tiempo en
            que se realizo la creación del cliente
          schema:
            $ref: '#/definitions/ReponseCreatedObjectProduct'
          headers: {}
        '400':
          description: >-
            Bad Request. El servidor no puede o no va a procesar el request por
            un error de sintaxis del cliente debido a que no cumple con la
            estructura esperada.
          schema:
            $ref: '#/definitions/ResponseBabRequest'
          headers: {}
          
        '409':
          description: >-
            Conflict. La solicitud no pudo ser procesada debido a un conflicto, el registro ya existe en la BD.
          schema:
            $ref: '#/definitions/ResponseConflict'
          headers: {}
          
        '401':
          description: >-
            401 Unauthorized La autentificación ha fallado o todavía no se a
            facilitado.
          schema:
            $ref: '#/definitions/ResponseUnauthorized'
          headers: {}
          
        '501':
          description: >-
            501 Not Implemented. El servidor no reconoce el método del request o
            carece de la capacidad para completarlo.
          schema:
            $ref: '#/definitions/ResponseNotImplemented'
          headers: {}
  
  /listProducts/{client_code}:
    get:
      tags:
        - PRODUCTOS
      summary: Listar todos los productos que están asociados a un cliente.Se implementa bajo el método getProducts().
      description: >-
        End point que permite listar todos los productos que están asociados a  un  cliente en la tabla
        TBL_CLIENTE_PRODUCTO_AZURE de la base de datos dbalmacenamiento.Se implementa bajo el método getProducts().
      operationId: getProducts
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: client_code
          description: "Código que identifica al cliente de manera única en RIS, es otra llave diferente al NIT dado que es asignada por el sistema."
          required: true
          type: "integer"
      responses:
        '200':
          description: >-
           200 OK. El request es correcto. Esta es la respuesta estándar para respuestas correctas.
          schema:
            $ref: '#/definitions/ResponseOKGetProducts'
          headers: {}
        '400':
          description: >-
            Bad Request. El servidor no puede o no va a procesar el request por
            un error de sintaxis del cliente debido a que no cumple con la
            estructura esperada.
          schema:
            $ref: '#/definitions/ResponseBabRequest'
          headers: {}
        '401':
          description: >-
            401 Unauthorized La autentificación ha fallado o todavía no se a
            facilitado.
          schema:
            $ref: '#/definitions/ResponseUnauthorized'
          headers: {}
        '501':
          description: >-
            501 Not Implemented. El servidor no reconoce el método del request o
            carece de la capacidad para completarlo.
          schema:
            $ref: '#/definitions/ResponseNotImplemented'
          headers: {}
        
  /updateProduct:
    put:
      tags:
        - PRODUCTOS
      summary: Actualizar un producto previamente registrado. Se implementa bajo el método updateProduct().
      description: >-
        End point que permite actualizar un  producto en la tabla
        TBL_CLIENTE_PRODUCTO_AZURE de la base de datos dbalmacenamiento.Se implementa bajo el método updateProduct().
      operationId: updateProduct
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: >-
            Objeto que contiene la estructura de un producto,  los atributos están representados por: client_code (Código del cliente asociado al producto), product_code (Código del prodcuto),
            product_name (Nombre del producto), product_description
            (descripción del producto), data_base_name (Nombre de la Base de datos donde será almacenado el producto), Tiempo de Vigencia en meses (period_time_months) y la configuración del contenedor. Para cada contenedor se debe registar: Nombre de la cuenta de almacenamiento (azure_account_name),Nombre del contenedor (azure_container_name) .Se implementa bajo el método createProduct(), es OBLIGATORIO validar las llaves de actulización (client_code, product_code).
          required: true
          schema:
            $ref: '#/definitions/Products'
      responses:
        '200':
          description: >-
           200 OK. El request es correcto. Esta es la respuesta estándar para respuestas correctas.
          schema:
            $ref: '#/definitions/ResponseOk'
          headers: {}
        '400':
          description: >-
            Bad Request. El servidor no puede o no va a procesar el request por
            un error de sintaxis del cliente debido a que no cumple con la
            estructura esperada.
          schema:
            $ref: '#/definitions/ResponseBabRequest'
          headers: {}
        '401':
          description: >-
            401 Unauthorized La autentificación ha fallado o todavía no se a
            facilitado.
          schema:
            $ref: '#/definitions/ResponseUnauthorized'
          headers: {}
        '501':
          description: >-
            501 Not Implemented. El servidor no reconoce el método del request o
            carece de la capacidad para completarlo.
          schema:
            $ref: '#/definitions/ResponseNotImplemented'
          headers: {}
          
  /listIndex/{client_code}/{product_code}:
    get:
      tags:
        - ÍNDICES DE ALMACENAMIENTO
      summary: Listar todos los índices de almacenamiento que están configurados dentro del estándar de RIS para un nuevo producto. Se implementa bajo el método getIndex().
      description: >-
        End point que permite listar todos los índices de almacenamiento que están asociados al estándar de RIS. Para ello es necesario extraer la información de la 
        TBL_MASTER_CONFIGURATION_STORAGE_INDEX de la base de datos dbris,se extraen unicamente los registros que se encuentran activos para el estándar (ACTIVO_ESTANDAR =1), adicionalmente es necesario extraer solo los indices que se encuentran activos a nivel de cliente producto por tal motivo es necesario cruzar con la tabla TBL_BL_CLIENT_PRODUCT_SERVICE de la base de datos dbris a nivel de servicio.Se implementa bajo el método getIndex().
      operationId: getIndex()
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: client_code
          description: "Código que identifica al cliente de manera única en RIS, es otra llave diferente al NIT dado que es asignada por el sistema."
          required: true
          type: "integer"
          
        - in: path
          name: product_code
          description: "Código que identifica al producto de manera única en RIS, esta llave es asignada por el sistema."
          required: true
          type: "integer"
      responses:
        '200':
          description: >-
           200 OK. El request es correcto. Esta es la respuesta estándar para respuestas correctas.
          schema:
            $ref: '#/definitions/ResponseOKIndexes'
          headers: {}
        '400':
          description: >-
            Bad Request. El servidor no puede o no va a procesar el request por
            un error de sintaxis del cliente debido a que no cumple con la
            estructura esperada.
          schema:
            $ref: '#/definitions/ResponseBabRequest'
          headers: {}
        '401':
          description: >-
            401 Unauthorized La autentificación ha fallado o todavía no se a
            facilitado.
          schema:
            $ref: '#/definitions/ResponseUnauthorized'
          headers: {}
        '501':
          description: >-
            501 Not Implemented. El servidor no reconoce el método del request o
            carece de la capacidad para completarlo.
          schema:
            $ref: '#/definitions/ResponseNotImplemented'
          headers: {}
          
  /createIndex:
    post:
      tags:
        - ÍNDICES DE ALMACENAMIENTO
      summary: Registra los índices de almacenamiento asociados a un producto.Se implementa bajo el método createIndex().
      description: >-
        End point que permite registrar los índices de consulta asociados a un producto. Se registra en la TBL_INDEXACION_ALMACENAMIENTO de la base de datos dbalmacenamiento.Se implementa bajo el método createIndex().
      operationId: createIndex
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: >-
            Objeto cuyos atributos son de caracter OBLIGATORIO y están representados por: client_code (Código del cliente), product_code (Código del producto) , storage_field (nombre del campo de almacenamiento, hace referencia al nombre de la columna de la TBL_ALMACENAMIENTO), source_field (Campo fuente, hace referencia al nombre del campo que será almacenado a la columna descrita en el storage_field), show_filter (Indica si se visualizará en los filtros del front del cliente, debe ser 0 u 1 , 0 indica que no visualizará), result_order (Indica el ordén en el que se visualizará el resultado), show_result (Indica si se visualizará en los resultados del front del cliente, debe ser 0 u 1 , 0 indica que no visualizará), filter_order (Indica el ordén en el que se visualizará este campo en front del cliente).
          required: true
          schema:
            $ref: '#/definitions/Indexes'
      responses:
        '201':
          description: >-
            Created. El request se ha completado y se ha creado un nuevo
            recurso.
          schema:
            $ref: '#/definitions/ResponseCreatedObject'
          headers: {}
        '400':
          description: >-
            Bad Request. El servidor no puede o no va a procesar el request por
            un error de sintaxis del cliente debido a que no cumple con la
            estructura esperada.
          schema:
            $ref: '#/definitions/ResponseBabRequest'
          headers: {}
          
        '409':
          description: >-
            Conflict. La solicitud no pudo ser procesada debido a un conflicto, el registro ya existe en la BD.
          schema:
            $ref: '#/definitions/ResponseConflict'
          headers: {}
          
        '401':
          description: >-
            401 Unauthorized La autentificación ha fallado o todavía no se a
            facilitado.
          schema:
            $ref: '#/definitions/ResponseUnauthorized'
          headers: {}
          
        '501':
          description: >-
            501 Not Implemented. El servidor no reconoce el método del request o
            carece de la capacidad para completarlo.
          schema:
            $ref: '#/definitions/ResponseNotImplemented'
          headers: {}
  
  /createPeriods:
    post:
      tags:
        - PERIDOS DE CONSULTA
      summary: Registra los periodos de tiempo (días), en los que puede ser consultado un producto dentro de RIS.Se implementa bajo el método createPeriods().
      description: >-
        End point que permite registrar los peridos de tiempo (días), en los que puede ser consultado un producto dentro de RIS. Se registra en la TBL_PERIODO_CONSULTA de la base de datos dbalmacenamiento.Se implementa bajo el método createPeriods().
      operationId: createPeriods
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: >-
            Objeto cuyos atributos son de caracter OBLIGATORIO y están representados por: client_code (Código del cliente), product_code (Código del producto) y period_time_days (Tiempo de consulta en días).
          required: true
          schema:
            $ref: '#/definitions/Periods'
      responses:
        '201':
          description: >-
            Created. El request se ha completado y se ha creado un nuevo
            recurso.
          schema:
            $ref: '#/definitions/ResponseCreatedObject'
          headers: {}
        '400':
          description: >-
            Bad Request. El servidor no puede o no va a procesar el request por
            un error de sintaxis del cliente debido a que no cumple con la
            estructura esperada.
          schema:
            $ref: '#/definitions/ResponseBabRequest'
          headers: {}
          
        '409':
          description: >-
            Conflict. La solicitud no pudo ser procesada debido a un conflicto, el registro ya existe en la BD.
          schema:
            $ref: '#/definitions/ResponseConflict'
          headers: {}
          
        '401':
          description: >-
            401 Unauthorized La autentificación ha fallado o todavía no se a
            facilitado.
          schema:
            $ref: '#/definitions/ResponseUnauthorized'
          headers: {}
          
        '501':
          description: >-
            501 Not Implemented. El servidor no reconoce el método del request o
            carece de la capacidad para completarlo.
          schema:
            $ref: '#/definitions/ResponseNotImplemented'
          headers: {}
          
  /listServices:
    get:
      tags:
        - SERVICIOS RIS
      summary: Listar todas las servicios disponibles en RIS. Se implementa bajo el método getServices().
      description: >-
        End point que permite listar todas los servicios disponibles en RIS, extrae la información de la
        TBL_MASTER_SERVICE_ELECTRONIC_SEND de la base de datos dbris.Se implementa bajo el método getServices() , solamente lista los servicios que se encuentran activos (active = 1) para obtener la categoría y sub categoría del servicio es necesario cruzar con las tablas TBL_MASTER_CATEGORY y TBL_MASTER_SUBCATEGORY de la base de datos dbris.
      operationId: getServices
      produces:
        - application/json
      responses:
        '200':
          description: >-
            200 OK. El request es correcto. Esta es la respuesta estándar para
            respuestas correctas.
          schema:
            $ref: '#/definitions/ResponseOkGetServices'
          headers: {}
        '400':
          description: >-
            Bad Request. El servidor no puede o no va a procesar el request por
            un error de sintaxis del cliente debido a que no cumple con la
            estructura esperada.
          schema:
            $ref: '#/definitions/ResponseBabRequest'
          headers: {}
        '401':
          description: >-
            401 Unauthorized La autentificación ha fallado o todavía no se a
            facilitado.
          schema:
            $ref: '#/definitions/ResponseUnauthorized'
          headers: {}
        '501':
          description: >-
            501 Not Implemented. El servidor no reconoce el método del request o
            carece de la capacidad para completarlo.
          schema:
            $ref: '#/definitions/ResponseNotImplemented'
          headers: {}
          
  /createServiceClientProduct:
    post:
      tags:
        - SERVICIOS RIS
      summary: Registra los servicios que se desean activar para un cliente en un producto en especifico.Se implementa bajo el método createServiceClientProduct().
      description: >-
        End point que permite registrar los servicios activos a nivel de cliente producto dentro de RIS. Se registra en la TBL_CLIENT_PRODUCT_SERVICE de la base de datos dbris.Se implementa bajo el método createServiceClientProduct().
      operationId: createServiceClientProduct
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: >-
            Objeto cuyos atributos son de caracter OBLIGATORIO y están representados por: client_code (Código del cliente), product_code (Código del producto), service_code (código del servicio) y active (0 o 1 indicando si el servicio esta activo o no).
          required: true
          schema:
            $ref: '#/definitions/Services'
      responses:
        '201':
          description: >-
            Created. El request se ha completado y se ha creado un nuevo
            recurso.
          schema:
            $ref: '#/definitions/ResponseCreatedObject'
          headers: {}
        '400':
          description: >-
            Bad Request. El servidor no puede o no va a procesar el request por
            un error de sintaxis del cliente debido a que no cumple con la
            estructura esperada.
          schema:
            $ref: '#/definitions/ResponseBabRequest'
          headers: {}
          
        '409':
          description: >-
            Conflict. La solicitud no pudo ser procesada debido a un conflicto, el registro ya existe en la BD.
          schema:
            $ref: '#/definitions/ResponseConflict'
          headers: {}
          
        '401':
          description: >-
            401 Unauthorized La autentificación ha fallado o todavía no se a
            facilitado.
          schema:
            $ref: '#/definitions/ResponseUnauthorized'
          headers: {}
          
        '501':
          description: >-
            501 Not Implemented. El servidor no reconoce el método del request o
            carece de la capacidad para completarlo.
          schema:
            $ref: '#/definitions/ResponseNotImplemented'
          headers: {}
          
  /listTemplatesSMS:
    get:
      tags:
        - TEMPLATE SMS
      summary: Listar todas las templates disponibles en RIS para los servicios de SMS. Se implementa bajo el método getTemplatesSMS().
      description: >-
        End point que permite listar todas los templates de todos los servicios de SMS disponibles en RIS, extrae la información de la
        TBL_TEMPLATE_SMS de la base de datos dbsms.Se implementa bajo el método getTemplatesSMS() y solamente lista los templates que se encuentran activos (active = 1).
      operationId: getTemplatesSMS
      produces:
        - application/json
      responses:
        '200':
          description: >-
            200 OK. El request es correcto. Esta es la respuesta estándar para
            respuestas correctas.
          schema:
            $ref: '#/definitions/TemplatesSMS'
          headers: {}
        '400':
          description: >-
            Bad Request. El servidor no puede o no va a procesar el request por
            un error de sintaxis del cliente debido a que no cumple con la
            estructura esperada.
          schema:
            $ref: '#/definitions/ResponseBabRequest'
          headers: {}
        '401':
          description: >-
            401 Unauthorized La autentificación ha fallado o todavía no se a
            facilitado.
          schema:
            $ref: '#/definitions/ResponseUnauthorized'
          headers: {}
        '501':
          description: >-
            501 Not Implemented. El servidor no reconoce el método del request o
            carece de la capacidad para completarlo.
          schema:
            $ref: '#/definitions/ResponseNotImplemented'
          headers: {}
          
  /listTemplatesSMS/{client_code}/{product_code}:
    get:
      tags:
        - TEMPLATE SMS
      summary: Listar todas las templates disponibles en RIS para un cliente, porducto especifico en los servicios de SMS.Se implementa bajo el método getTemplateSMSByProductClient().
      description: >-
        End point que permite listar todas los templates  asociados a un cliente producto en para los servicios de SMS disponibles en RIS, extrae la información de la
        TBL_TEMPLATE_SMS de la base de datos dbsms.Se implementa bajo el método getTemplateSMSByProductClient() y solamente lista los templates que se encuentran activos (active = 1).
      operationId: getTemplateSMSByProductClient
      produces:
        - application/json
      parameters:
        - in: path
          name: client_code
          description: "Código que identifica al cliente de manera única en RIS, es otra llave diferente al NIT dado que es asignada por el sistema."
          required: true
          type: "integer"
          
        - in: path
          name: product_code
          description: "Código que identifica al producto de manera única en RIS, esta llave es asignada por el sistema."
          required: true
          type: "integer"
      responses:
        '200':
          description: >-
            200 OK. El request es correcto. Esta es la respuesta estándar para
            respuestas correctas.
          schema:
            $ref: '#/definitions/TemplatesSMS'
          headers: {}
        '400':
          description: >-
            Bad Request. El servidor no puede o no va a procesar el request por
            un error de sintaxis del cliente debido a que no cumple con la
            estructura esperada.
          schema:
            $ref: '#/definitions/ResponseBabRequest'
          headers: {}
        '401':
          description: >-
            401 Unauthorized La autentificación ha fallado o todavía no se a
            facilitado.
          schema:
            $ref: '#/definitions/ResponseUnauthorized'
          headers: {}
        '501':
          description: >-
            501 Not Implemented. El servidor no reconoce el método del request o
            carece de la capacidad para completarlo.
          schema:
            $ref: '#/definitions/ResponseNotImplemented'
          headers: {}
          
  /createTemplateSMS:
    post:
      tags:
        - TEMPLATE SMS
      summary: Crea un nuevo template para un cliente producto en los servicios de SMS. Se implementa bajo el método createTemplateSMS().
      description: >-
        End point que permite almacenar un nuevo template para los servicios de SMS  a nivel de cliente producto. Se registra en la TBL_TEMPLATE_SMS de la base de datos dbsms.Se implementa bajo el método createTemplateSMS().
      operationId: createTemplateSMS
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: >-
            Objeto cuyos atributos son de caracter OBLIGATORIO y están representados por: client_code (Código del cliente), product_code (Código del producto), service_code (código del servicio) , template_content ( Contenido del template),  active (0 o 1 indicando si el servicio esta activo o no), dinamic (0 o 1 indicando que el template contiene 
              parámetros dinámicos o no)
          required: true
          schema:
            $ref: '#/definitions/CreatedTemplateSMS'
      responses:
        '201':
          description: >-
            Created. El request se ha completado y se ha creado un nuevo
            recurso.
          schema:
            $ref: '#/definitions/ResponseCreatedObject'
          headers: {}
        '400':
          description: >-
            Bad Request. El servidor no puede o no va a procesar el request por
            un error de sintaxis del cliente debido a que no cumple con la
            estructura esperada.
          schema:
            $ref: '#/definitions/ResponseBabRequest'
          headers: {}
          
        '409':
          description: >-
            Conflict. La solicitud no pudo ser procesada debido a un conflicto, el registro ya existe en la BD.
          schema:
            $ref: '#/definitions/ResponseConflict'
          headers: {}
          
        '401':
          description: >-
            401 Unauthorized La autentificación ha fallado o todavía no se a
            facilitado.
          schema:
            $ref: '#/definitions/ResponseUnauthorized'
          headers: {}
          
        '501':
          description: >-
            501 Not Implemented. El servidor no reconoce el método del request o
            carece de la capacidad para completarlo.
          schema:
            $ref: '#/definitions/ResponseNotImplemented'
          headers: {}
  
  /listTemplatesMail:
    get:
      tags:
        - TEMPLATE MAIL
      summary: Listar todas las templates disponibles en RIS para los servicios de Mail. Se implementa bajo el método getTemplatesMail().
      description: >-
        End point que permite listar  los templates de todos los servicios de Mail disponibles en RIS, extrae la información de la
        TBL_TEMPLATE_MAIL de la base de datos dbemail.Se implementa bajo el método getTemplatesMail() y solamente lista los templates que se encuentran activos (active = 1).
      operationId: getTemplatesMail
      produces:
        - application/json
      responses:
        '200':
          description: >-
            200 OK. El request es correcto. Esta es la respuesta estándar para
            respuestas correctas.
          schema:
            $ref: '#/definitions/TemplatesMail'
          headers: {}
        '400':
          description: >-
            Bad Request. El servidor no puede o no va a procesar el request por
            un error de sintaxis del cliente debido a que no cumple con la
            estructura esperada.
          schema:
            $ref: '#/definitions/ResponseBabRequest'
          headers: {}
        '401':
          description: >-
            401 Unauthorized La autentificación ha fallado o todavía no se a
            facilitado.
          schema:
            $ref: '#/definitions/ResponseUnauthorized'
          headers: {}
        '501':
          description: >-
            501 Not Implemented. El servidor no reconoce el método del request o
            carece de la capacidad para completarlo.
          schema:
            $ref: '#/definitions/ResponseNotImplemented'
          headers: {}
  /listTemplatesMail/{client_code}/{product_code}:
    get:
      tags:
        - TEMPLATE MAIL
      summary: Listar todas las templates disponibles en RIS para un cliente, porducto especifico en los servicios de Mail.Se implementa bajo el método getTemplateMailByProductClient().
      description: >-
        End point que permite listar todos los templates  asociados a un cliente producto en para los servicios de MAIL disponibles en RIS, extrae la información de la
        TBL_TEMPLATE_MAIL de la base de datos dbemail.Se implementa bajo el método getTemplateMailByProductClient() y solamente lista los templates que se encuentran activos (active = 1).
      operationId: getTemplateMailByProductClient
      produces:
        - application/json
      parameters:
        - in: path
          name: client_code
          description: "Código que identifica al cliente de manera única en RIS, es otra llave diferente al NIT dado que es asignada por el sistema."
          required: true
          type: "integer"
          
        - in: path
          name: product_code
          description: "Código que identifica al producto de manera única en RIS, esta llave es asignada por el sistema."
          required: true
          type: "integer"
      responses:
        '200':
          description: >-
            200 OK. El request es correcto. Esta es la respuesta estándar para
            respuestas correctas.
          schema:
            $ref: '#/definitions/TemplateMail'
          headers: {}
        '400':
          description: >-
            Bad Request. El servidor no puede o no va a procesar el request por
            un error de sintaxis del cliente debido a que no cumple con la
            estructura esperada.
          schema:
            $ref: '#/definitions/ResponseBabRequest'
          headers: {}
        '401':
          description: >-
            401 Unauthorized La autentificación ha fallado o todavía no se a
            facilitado.
          schema:
            $ref: '#/definitions/ResponseUnauthorized'
          headers: {}
        '501':
          description: >-
            501 Not Implemented. El servidor no reconoce el método del request o
            carece de la capacidad para completarlo.
          schema:
            $ref: '#/definitions/ResponseNotImplemented'
          headers: {}
          
  /createTemplateMail:
    post:
      tags:
        - TEMPLATE MAIL
      summary: >-
          Crea un nuevo template para un cliente producto en los servicios de MAIL. Se implementa bajo el método createTemplateMail().
      description: >-
        End point que permite almacenar un nuevo template para los servicios de  MAIL  a nivel de cliente producto. Se registra en la TBL_TEMPLATE_MAIL de la base de datos dbemail.Se implementa bajo el método createTemplateMail().
      operationId: createTemplateMail
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: >-
            Objeto cuyos atributos son de caracter OBLIGATORIO y están representados por: client_code (Código del cliente), product_code (Código del producto), service_code (código del servicio), mail_subject (Asunto del correo),  template_content ( HTML a enviar en el cuerpo del correo), dinamic (0 o 1 indicando que el template contiene 
              parámetros dinámicos o no), mail_mask (Máscara de envío del correo), mail_from (Correo desde el que se realizará el envío), active (0 o 1 indicando si el servicio esta activo o no para el ETL), active_fx (0 o 1 indicando si el servicio esta activo o no para las funciones), default_code_provider  (Código único del proveedor por el que se realizarán los envíos), inserts_active (0 o 1 indicando si el cliente producto tienen insertos activos), inserts (En caso de que existan insertos debera especificarse el path del inserto para luego ser descargado).
          required: true
          schema:
            $ref: '#/definitions/TemplateMail'
      responses:
        '201':
          description: >-
            Created. El request se ha completado y se ha creado un nuevo
            recurso.
          schema:
            $ref: '#/definitions/ResponseCreatedObject'
          headers: {}
        '400':
          description: >-
            Bad Request. El servidor no puede o no va a procesar el request por
            un error de sintaxis del cliente debido a que no cumple con la
            estructura esperada.
          schema:
            $ref: '#/definitions/ResponseBabRequest'
          headers: {}
          
        '409':
          description: >-
            Conflict. La solicitud no pudo ser procesada debido a un conflicto, el registro ya existe en la BD.
          schema:
            $ref: '#/definitions/ResponseConflict'
          headers: {}
          
        '401':
          description: >-
            401 Unauthorized La autentificación ha fallado o todavía no se a
            facilitado.
          schema:
            $ref: '#/definitions/ResponseUnauthorized'
          headers: {}
          
        '501':
          description: >-
            501 Not Implemented. El servidor no reconoce el método del request o
            carece de la capacidad para completarlo.
          schema:
            $ref: '#/definitions/ResponseNotImplemented'
          headers: {}
  
  /listProviders:
    get:
      tags:
        - PROVEDORES
      summary: >-
        Listar todos los proveedores que estan disponibles para los diferentes servicios dentro de RIS. Se implemeta bajo el método getProviders().
      description: >-
        End point que permite listar todos los proveedores de RIS.Extrae la información de la
        TBL_MASTER_PROVIDERS_ELECTRONIC_SEND de la base de datos dbris solo se listan aquellos provedores que están activos. Se implemeta bajo el método getProviders().
      operationId: getProviders
      produces:
        - application/json
      responses:
        '200':
          description: >-
            200 OK. El request es correcto. Esta es la respuesta estándar para
            respuestas correctas.
          schema:
            $ref: '#/definitions/ResponseOKGetProviders'
          headers: {}
        '400':
          description: >-
            Bad Request. El servidor no puede o no va a procesar el request por
            un error de sintaxis del cliente debido a que no cumple con la
            estructura esperada.
          schema:
            $ref: '#/definitions/ResponseBabRequest'
          headers: {}
        '401':
          description: >-
            401 Unauthorized La autentificación ha fallado o todavía no se a
            facilitado.
          schema:
            $ref: '#/definitions/ResponseUnauthorized'
          headers: {}
        '501':
          description: >-
            501 Not Implemented. El servidor no reconoce el método del request o
            carece de la capacidad para completarlo.
          schema:
            $ref: '#/definitions/ResponseNotImplemented'
          headers: {}
          
definitions:

  Parameters:
    type: object
    required: 
      - sub_category
      - parameter
      - value_parameter
    properties:
      sub_category:
        type: string
        example: SMS
      parameter:
        type: string
        example: >-
           #PARAM1#
      value_parameter:
        type: string
        example: NOMBRE
      
  Inserts:
    type: object
    required:
      - path_insert
    properties:
      path_insert:
        type: string
        example: >-
          https://computecdesarrollo.blob.core.windows.net/insertos/fac_balancoop_3.pdf
      
  TemplatesMail:
    type: array
    items:
      $ref: '#/definitions/TemplateMail'
    
    
  TemplateMail:
    type: object
    required:
    - client_code
    - product_code
    - service_code
    - mail_subject
    - template_content
    - dinamic
    - mail_mask
    - mail_from
    - active
    - active_fx
    - default_code_provider
    - inserts_active
    properties:
      client_code:
        type: integer
        format: int32
        example: 62
      product_code:
        type: integer
        format: int32
        example: 1234
      service_code:
        type: integer
        format: int32
        example: 7
      mail_subject:
        type: string
        example: >-
          Crédito Rotativo
      template_content:
        type: string
        example: >-
              <p>&nbsp;</p><div align="center"><table border="0" cellspacing="0" cellpadding="0" width="739"><tbody><tr><td width="739" align="center"><img alt="" width="693" height="153" src="http://tr.computec.com.co/coasmedas/Coasmedas_Horizontal.jpg" /></td></tr></tbody></table><table border="0" cellspacing="0" cellpadding="0" width="743"><tbody><tr><td width="743"><table border="0" cellspacing="0" cellpadding="0" width="100%" bgcolor="#ffffff" align="center" height="440"><tbody><tr><td height="440" width="4%">&nbsp;</td><td width="92%"><p align="justify" style="line-height: 20px; font-family: sans-serif; color: #333333; font-size: 14px"><strong><br />Estimado(a):</strong><br /><br style="text-align: justify; line-height: 20px; font-family: sans-serif; color: #464646; font-size: 13px" /><span class="Estilo2"> #parameter1# </span><br /><br style="text-align: justify; line-height: 20px; font-family: sans-serif; color: #464646; font-size: 13px" />Gracias por apoyar el planeta recibiendo su Extracto Digital con COASMEDAS.</p><p align="justify" style="line-height: 20px; font-family: sans-serif; color: #333333; font-size: 14px">Adjunto encontrar&aacute; su extracto mensual en PDF, para abrirlo por favor haga doble clic  sobre &eacute;ste, escoja la opci&oacute;n de <strong>Abrir el Archivo</strong> e ingrese la clave asignada.<strong> La clave  para abrir su extracto es el n&uacute;mero de su documento de identidad.</strong><br /><br align="justify" style="line-height: 20px; font-family: sans-serif; color: #333333; font-size: 13px" />Si no puede visualizar el extracto, necesitar&aacute; instalar la &uacute;ltima versi&oacute;n de Acrobat Reader  la cual puede descargar gratuitamente en: <br /><a href="http://www.adobe.com/products/acrobat/readstep2.html">http://www.adobe.com/products/acrobat/readstep2.html</a> .<br /><br align="justify" style="line-height: 20px; font-family: sans-serif; color: #333333; font-size: 13px" />Le recordamos que sus facturas estar&aacute;n siempre disponibles en <a href="http://www.adobe.com/products/acrobat/readstep2.html">www.coasmedas.coop</a> ingresando a la Oficina Virtual 24 horas.<br align="justify" style="line-height: 20px; font-family: sans-serif; color: #333333; font-size: 13px" /><br />Lo invitamos a consultar informaci&oacute;n adicional de los productos y servicios destacados de este mes, ingresando a nuestra p&aacute;gina web <a href="http://www.adobe.com/products/acrobat/readstep2.html">www.coasmedas.coop</a> y sigui&eacute;ndonos en nuestras redes sociales:</p><p align="center" style="line-height: 20px; font-family: sans-serif; color: #333333; font-size: 14px"><img name="Logo_facebook1" src="http://tr.computec.com.co/coasmedas/2019/enero/Logo_facebook1.jpg" width="40" height="40" id="Logo_facebook1" usemap="#m_Logo_facebook1" alt="" />   <map name="m_Logo_facebook1" id="m_Logo_facebook1"><area shape="poly" coords="2,2,37,2,35,39,2,42,2,2" href="https://www.facebook.com/Coasmedas?fref=ts " alt="" />   </map> <img name="iconotwitter" src="http://tr.computec.com.co/coasmedas/2019/enero/icono-twitter.jpg" width="40" height="40" id="iconotwitter" usemap="#m_iconotwitter" alt="" /> <map name="m_iconotwitter" id="m_iconotwitter"><area shape="rect" coords="1,1,39,40" href="https://twitter.com/Coasmedas" alt="" />   </map>        <img name="Instagram1" src="http://tr.computec.com.co/coasmedas/2019/enero/Instagram1.jpg" width="40" height="38" id="Instagram1" usemap="#m_Instagram1" alt="" /><map name="m_Instagram1" id="m_Instagram1"><area shape="rect" coords="0,0,40,38" href="https://www.instagram.com/coasmedascoop/" alt="" />         </map> <img name="iconoyoutube" src="http://tr.computec.com.co/coasmedas/2019/enero/icono-youtube.jpg" width="40" height="40" id="iconoyoutube" usemap="#m_iconoyoutube" alt="" /> <map name="m_iconoyoutube" id="m_iconoyoutube"><area shape="rect" coords="-4,2,42,39" href="https://www.youtube.com/channel/UCTkJdab-NQBSg3QqaJzIfzQ" alt="" /> </map></p><p align="justify " style="line-height: 20px; font-family: sans-serif; color: #333333; font-size: 14px">Si tiene alguna inquietud, comun&iacute;quese con nuestra <strong style="color: #0070C6">L&iacute;nea Azul:</strong> En Bogot&aacute;: 589 5636 y desde el resto del pa&iacute;s 01 8000 910492.</p><p align="justify" style="line-height: 20px; font-family: sans-serif; color: #333333; font-size: 14px">Cordialmente,<br /><br /><strong>COASMEDAS</strong><br />Cooperativa de ahorro y cr&eacute;dito<br /><br align="justify" style="line-height: 20px; font-family: sans-serif; color: #333333; font-size: 13px" /><span class="Estilo7">Este correo es de tipo informativo y por lo tanto, le solicitamos no responder a este mensaje. <strong>La Cooperativa no solicitar&aacute; su clave secreta a trav&eacute;s de este medio.</strong></span></p></td><td height="440" width="4%">&nbsp;</td></tr></tbody></table></td></tr></tbody></table><table border="0" cellspacing="0" cellpadding="0" width="749" align="center"><tbody><tr><td width="749" align="center"><table border="0" cellspacing="1" cellpadding="1" width="749" height="25"><tbody><tr><td width="28" scope="col">&nbsp;</td><td width="679" scope="col"><img alt="BannerCoasmedas" width="693" height="322" src="http://tr.computec.com.co/coasmedas/2018/Julio/BannerJulio2018.jpg" /></td><td width="32" scope="col">&nbsp;</td></tr></tbody></table></td></tr></tbody></table></div>
      dinamic:
        type: integer
        format: int32
        example: 1
      mail_mask:
        type: string
        example: >-
          Computec
      mail_from:
        type: string
        example: >-
          documentoscomputec@computec.com
      active:
        type: integer
        format: int32
        example: 1
      active_fx:
        type: integer
        format: int32
        example: 1
      default_code_provider:
        type: integer
        format: int32
        example: 2
      inserts_active:
        type: integer
        format: int32
        example: 1
      inserts:
        type: array
        items:
          $ref: '#/definitions/Inserts' 
      
    

  CreatedTemplateSMS:
    type: object
    required:
      - client_code
      - product_code
      - service_code
      - template_content
      - active
      - active_fx
      - dinamic
    properties:
      client_code:
        type: integer
        format: int32
        example: 62
      product_code:
        type: integer
        format: int32
        example: 1234
      service_code:
        type: integer
        format: int32
        example: 2
      template_content:
        type: string
        example: >-
          Bienvenido a RIS #parameter1#, tu registro ha sido exitoso
      active:
        type: integer
        format: int32
        example: 1
        
      active_fx:
        type: integer
        format: int32
        example: 1
        
      dinamic:
        type: integer
        format: int32
        example: 1
      
      language:
        type: string
        example: NO APLICA
  
  TemplatesSMS:
    type: array
    items:
       $ref: '#/definitions/TemplateSMS' 
  TemplateSMS:
    type: object
    required:
      - template_code
      - client_code
      - product_code
      - service_code
      - template_content
      - active
      - active_fx
      - dinamic
    properties:
      template_code:
        type: integer
        format: int32
        example: 1
      client_code:
        type: integer
        format: int32
        example: 62
      product_code:
        type: integer
        format: int32
        example: 1234
      service_code:
        type: integer
        format: int32
        example: 2
      template_content:
        type: string
        example: >-
          Bienvenido a RIS #parameter1#, tu registro ha sido exitoso
      active:
        type: integer
        format: int32
        example: 1
        
      active_fx:
        type: integer
        format: int32
        example: 1
        
      dinamic:
        type: integer
        format: int32
        example: 1
      
      language:
        type: string
        example: NO APLICA
  Services:
    type: array
    items:
      $ref: '#/definitions/Service'
      
  Service:
    type: object
    required:
      - client_code
      - product_code
      - service_code
      - active
    properties:
      client_code:
        type: integer
        format: int32
        example: 62
      product_code:
        type: integer
        format: int32
        example: 1234
      service_code:
        type: integer
        format: int32
        example: 2
      active:
        type: integer
        format: int32
        example: 1
    
  MasterService:
    type: object
    required:
      - service_code
      - service_name
      - service_description
      - service_category
      - service_sub_category
      - inserts
    properties:
      service_code:
        type: integer
        format: int32
        example: 9
      service_name:
        type: string
        example: MAIL_TX_EML
      service_description:
        type: string
        example: >-
         Servicio de envío de Mail, con varios adjuntos, adicionalmente guarda una copia del correo enviado en formato EML. Para usar este servicio es necesario configurar un Template.
      service_category:
        type: string
        example: Envió Electrónico
      service_sub_category:
        type: string
        example: MAIL
      inserts:
        type: integer
        format: int32
        example: 0
  StandardIndex:
    type: object
    required:
      - storage_field
      - source_field
      
      - service_code
      - customizable
      - show_filter
      - filter_order
      - show_result
      - result_order
    properties:
      storage_field:
        type: string
        example: ARCHIVO_1
      source_field:
        type: string
        example: Url Documento
      customizable:
        type: integer
        format: int32
        example: 1
      show_filter:
        type: integer
        format: int32
        example: 1
      filter_order:
        type: integer
        format: int32
        example: 1
      show_result:
        type: integer
        format: int32
        example: 1
      result_order:
        type: integer
        format: int32
        example: 5
     
  Index:
    type: object
    required:
      - client_code
      - product_code
      - storage_field
      - source_field
      - filter_order
      - show_filter
      - result_order
      - show_result
    properties:
      client_code:
        type: integer
        format: int32
        example: 62
      product_code:
        type: integer
        format: int32
        example: 91
      storage_field:
        type: string
        example: ARCHIVO_1
      source_field:
        type: string
        example: factura xml
      filter_order:
        type: integer
        format: int32
        example: 1
      show_filter:
        type: integer
        format: int32
        example: 1
      result_order:
        type: integer
        format: int32
        example: 5
      show_result:
        type: integer
        format: int32
        example: 1
  
  Indexes:
    type: array
    items:
      $ref: '#/definitions/Index'
      

  Transformation:
    type: object
    required:
      - transformation_code
      - transformation_name
    properties:
      transformation_code:
        type: integer
        format: int32
        example: 2
      transformation_name:
        type: string
        example: AFP
        
  Client:
    type: object
    required:
      - nit
      - business_name
      - azure_storage_accounts
    properties:
      nit:
        type: string
        example: 1234566-1
      business_name:
        type: string
        example: Client Test
      azure_storage_accounts:
        type: array
        items:
          $ref: '#/definitions/AzureStorageAccount'
          
  DataBases:
    type: object
    required:
      - data_base_name
    properties:
      data_base_name:
        type: string
        example: dbalmacenamiento
      environment:
        type: string
        example: produccion
      connection_string:
        type: string
        example: >-
          Server=tcp:dbalmacenamiento.database.windows.net,1433;Initial
          Catalog=dbalmacenamiento;Persist Security Info=False;User
          ID=admindba;Password={your_password};MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection
          Timeout=30;

  ClientsProducts:
    required:
      - client_code
      - data_base_name
      - nit
      - business_name
      - azure_storage_accounts
      - product_name
      - product_description
      - azure_storage_containers
    properties:
      client_code:
        type: integer
        format: Small Int
        example: 50
      data_base_name: 
        type: string
        example: dbalmacenamiento
      nit:
        type: string
        example: 1234566-1
      business_name:
        type: string
        example: Client Test
      azure_storage_accounts:
        type: array
        items:
          $ref: '#/definitions/AzureStorageAccount'
      product_name: 
        type: string
        example: Factura Electrónica
      product_description:
        type: string
        example: Contenedor de facturas en PDF y XML Computec
      
      azure_storage_containers:
        type: array
        items:
          $ref: '#/definitions/AzureStorageContainer' 
          
  Clients:
    type: object
    required:
      - client_code
      - nit
      - business_name
      - azure_storage_accounts
    properties:
      client_code:
        type: integer
        format: Small Int
        example: 50
      nit:
        type: string
        example: 1234566-1
      business_name:
        type: string
        example: Client Test
      azure_storage_accounts:
        type: array
        items:
          $ref: '#/definitions/AzureStorageAccount'
          
  AzureStorageContainer:
    type: object
    required:
      - azure_account_name
      - azure_container_name
      - period_time_months
    properties:
      azure_account_name:
        type: string
        example: computecdatacourrier
      azure_container_name:
        type: string
        example: imagenes
      period_time_months:
        type: integer
        format: int32
        example: 12
      
  Product:
    type: object
    required:
      - nit
      - business_name
      - azure_storage_accounts
      - data_base_name
      - product_name
      - product_description
      - azure_storage_containers
    properties:
      nit:
        type: string
        example: 1234566-1
      business_name:
        type: string
        example: Client Test
      azure_storage_accounts:
        type: array
        items:
          $ref: '#/definitions/AzureStorageAccount'
      product_name: 
        type: string
        example: Factura Electrónica
      product_description:
        type: string
        example: Contenedor de facturas en PDF y XML Computec
      data_base_name: 
        type: string
        example: dbalmacenamiento
      azure_storage_containers:
        type: array
        items:
          $ref: '#/definitions/AzureStorageContainer' 
  

  
  Products:
    type: object
    required:
      - client_code
      - product_code
      - product_name
    properties:
      client_code:
        type: integer
        format: int32
        example: 62
      product_code:
        type: integer
        format: int32
        example: 20
      product_name: 
        type: string
        example: Factura Electrónica
      product_description:
        type: string
        example: Contenedor de facturas en PDF y XML Computec
      data_base_name: 
        type: string
        example: dbalmacenamiento
      azure_storage_accounts:
        type: array
        items:
          $ref: '#/definitions/AzureStorageContainer'
    
      
  AzureStorageAccount:
    type: object
    required:
      - azure_account_name
      - azure_account_key
      - azure_account_sastoken
    properties:
      azure_account_name:
        type: string
        example: computecdatacourrier
      azure_account_key:
        type: string
        example: >-
          IPDhLFxGbEhEIEN5z9ly49QMgCGeD+ynlbP6gUAc1INpe1gFf/U45zg8dOcjbBEjiM2wi781UKn96O1PPI5SXA==
      azure_account_sastoken:
        type: string
        example: >-
          ?sv=2019-02-02&ss=b&srt=sco&sp=rwdlac&se=2062-11-28T07:14:13Z&st=2019-11-27T23:14:13Z&spr=https&sig=5mrkiwMvB6RkfbMYcyWMlNy4MG0YQ386zIkPt23tSHA%3D
  Period:
    type: object
    required:
      - client_code
      - product_code
      - period_time_days
    properties:
      client_code:
        type: integer
        format: int32
        example: 62
      product_code:
        type: integer
        format: int32
        example: 20
      period_time_days:
        type: integer
        format: int32
        example: 30
        
  Periods:
    type: array
    items:
      $ref: '#/definitions/Period'
      
  Language:
    type: object
    required:
      - language_code
      - language
    properties:
      language_code:
        type: string
        example: es
      language:
        type: string
        example: Español
  
  PeriodTime:
    type: object
    required:
      - period_time_months
      - period_time_days
      - period_time_description
    properties:
      period_time_months:
        type: integer
        format: int32
        example: 1
      period_time_days:
        type: integer
        format: int32
        example: 30
      period_time_description:
        type: string
        example: 1 MES
        
  Provider:
    type: object
    required:
      - provider_code
      - provider_name
    properties:
      provider_code:
        type: integer
        format: int32
        example: -1
      provider_name:
        type: string
        example: NO DEFINIDO
  
  ResponseOKGetLanguages:
    type: array
    items:
      $ref: '#/definitions/Language'
        
  ResponseOKGetProviders:
    type: array
    items:
      $ref: '#/definitions/Provider'
        
  ResponseOkGetServices:
    type: array
    items:
      $ref: '#/definitions/MasterService'
  
  ResponseOKGetClients:
    type: array
    items:
      $ref: '#/definitions/Clients'
      
  ResponseOKGetDataBases:
    type: array
    items:
      $ref: '#/definitions/DataBases'
  
  ResponseOKGetPeriodsTime:
    type: array
    items:
      $ref: '#/definitions/PeriodTime'
    
  ReponseOkGetParameters:
    type: array
    items:
      $ref: '#/definitions/Parameters'
  
  ResponseOKGetTransformations:
    type: array
    items:
      $ref: '#/definitions/Transformation'
  
  ResponseOKGetProducts:
    type: array
    items:
      $ref: '#/definitions/Products'
      
  ResponseOKIndexes:
    type: array
    items:
       $ref: '#/definitions/StandardIndex'
      
  ResponseConflict:
    type: object
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
        example: 409
      message:
        type: string
        example: >-
         La solicitud no pudo ser procesada debido a un conflicto, el registro ya existe en la BD.
      
  ResponseOk:
    type: object
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
        example: 200
      message:
        type: string
        example: >-
          Operación realizada exitosamente.

  ReponseCreatedObjectClient:
    type: object
    required:
      - code
      - message
      - client_code
    properties:
      code:
        type: integer
        format: int32
        example: 201
      client_code:
        type: integer
        format: int32
        example: 50
      message:
        type: string
        example: Cliente Creado Exitosamente
        
  ResponseCreatedObject:
    type: object
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
        example: 201
      message:
        type: string
        example: Creado Exitosamente
        
  ReponseCreatedObjectProduct:
    type: object
    required:
      - code
      - message
      - product_code
    properties:
      code:
        type: integer
        format: int32
        example: 201
      product_code:
        type: integer
        format: int32
        example: 62
      message:
        type: string
        example: Producto Creado Exitosamente
        
  ResponseBabRequest:
    type: object
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
        example: 400
      message:
        type: string
        example: El servidor no puede procesar la solicitud.
        
  ResponseUnauthorized:
    type: object
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
        example: 401
      message:
        type: string
        example: La autentificación ha fallado o todavía no se a facilitado.
        
  ResponseNotImplemented:
    type: object
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
        example: 501
      message:
        type: string
        example: >-
          El servidor no reconoce el método del request o carece de la capacidad
          para completarlo.
          

          
